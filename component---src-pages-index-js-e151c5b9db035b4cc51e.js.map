{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["mapboxgl","accessToken","hoveredStateId","clickedStateId","GtfsMap","props","_this","_Component","call","this","state","lng","lat","zoom","selected_bus","setStateAsync","_this2","Promise","resolve","setState","componentDidMount","_this3","_this$state","map","Map","container","mapContainer","style","center","maxZoom","minZoom","on","geojson","addSource","type","data","addLayer","id","source","paint","line-color","line-width","line-opacity","layout","line-join","line-cap","geojson_points","circle-color","circle-radius","circle-opacity","icon-image","icon-text-fit","icon-text-fit-padding","symbol-placement","symbol-spacing","icon-rotation-alignment","text-rotation-alignment","text-size","text-font","text-transform","text-letter-spacing","text-offset","text-color","move","bind","leave","click","setInterval","getSource","setData","console","log","e","getCanvas","cursor","features","length","setFeatureState","hover","_callee","trip_select","trip_json","trip_response","trip_data","trip_short_name","response","turf_center","center_coord","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","click_radius","parseInt","properties","trip_id","fetch","sent","json","route_short_name","geometry","coordinates","flyTo","setLayoutProperty","String","stop","render","_this4","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","ref","el","position","top","bottom","width","height","Component"],"mappings":"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","file":"component---src-pages-index-js-e151c5b9db035b4cc51e.js","sourcesContent":["import React, {Component} from \"react\"\n\nimport mapboxgl from 'mapbox-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { center } from '@turf/turf'\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FhZGlxbSIsImEiOiJjamJpMXcxa3AyMG9zMzNyNmdxNDlneGRvIn0.wjlI8r1S_-xxtq2d-W5qPA';\n\nlet hoveredStateId =  null;\nlet clickedStateId =  null;\n\nclass GtfsMap extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -114.0708,\n      lat: 51.0486,\n      zoom: 10.2,\n      selected_bus: null\n    };\n  }\n\n  setStateAsync(state) {\n     return new Promise((resolve) => {\n       this.setState(state, resolve)\n     });\n   }\n\n  componentDidMount() {\n\n    const {lng, lat, zoom } = this.state;\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/saadiqm/cju238axg1xac1fqi1xisuwwa',\n      center: [lng, lat],\n      zoom,\n      maxZoom: 12,\n      minZoom: 10.2,\n    });\n    this.map.on('load', () => {\n      let geojson = 'https://data.calgary.ca/resource/hpnd-riq4.geojson?route_short_name='+this.state.selected_bus\n      this.map.addSource('Bus Route', {\n        type: 'geojson',\n        data: geojson\n      });\n      this.map.addLayer({\n          \"id\": \"Bus Route\",\n          \"type\": \"line\",\n          \"source\": 'Bus Route',\n          \"paint\": {\n              \"line-color\": \"#FF0000\",\n              \"line-width\": 5,\n              \"line-opacity\": 0.7\n          },\n          \"layout\": {\n              \"line-join\": \"round\",\n              \"line-cap\": \"round\"\n          },\n      });\n      let geojson_points = 'https://dax2h6sk92.execute-api.us-east-1.amazonaws.com/dev/'\n      // let geojson_points = 'http://localhost:3000/'\n      this.map.addSource('Realtime Bus', {\n        type: 'geojson',\n        data: geojson_points\n      });\n      this.map.addLayer({\n          \"id\": \"Realtime Bus\",\n          \"type\": \"circle\",\n          \"source\": 'Realtime Bus',\n          \"paint\": {\n              \"circle-color\": [\"case\",\n                [\"boolean\", [\"feature-state\", \"click\"], false],\n                '#f4cb42',\n                '#ff0000'\n              ],\n              \"circle-radius\":[\"case\",\n                [\"boolean\", [\"feature-state\", \"click_radius\"], false],\n                9,\n                7\n              ],\n              \"circle-opacity\": [\"case\",\n                [\"boolean\", [\"feature-state\", \"hover\"], false],\n                1,\n                0.5\n              ]\n          }\n      });\n\n      this.map.addLayer({\n          \"id\": \"symbols\",\n          \"type\": \"symbol\",\n          \"source\": \"Bus Route\",\n          \"layout\": {\n            \"icon-image\": \"bus\",\n            \"icon-text-fit\":'none',\n            \"icon-text-fit-padding\":[3,3,3,3],\n            \"symbol-placement\":  \"line\",\n            'symbol-spacing':1000,\n            'icon-rotation-alignment': 'viewport',\n            'text-rotation-alignment':'viewport',\n            \"text-size\": 12,\n            \"text-font\": [\"Open Sans Bold\", \"Arial Unicode MS Bold\"],\n            \"text-transform\": \"uppercase\",\n            \"text-letter-spacing\": 0.05,\n            \"text-offset\": [0, 0]\n          },\n          \"paint\": {\n              \"text-color\": \"red\"\n          }\n      });\n\n      this.map.on(\"mousemove\", \"Realtime Bus\", this.move.bind(this));\n      this.map.on(\"mouseleave\", \"Realtime Bus\", this.leave.bind(this));\n      this.map.on(\"click\", \"Realtime Bus\", this.click.bind(this));\n\n      setInterval(() => {\n          this.map.getSource('Realtime Bus').setData(geojson_points)\n          console.log(\"update map\")\n        }, 45000);\n    });\n  }\n\n  move(e){\n    this.map.getCanvas().style.cursor = 'pointer';\n    if (e.features.length > 0) {\n      if (hoveredStateId) {\n        this.map.setFeatureState({source: 'Realtime Bus', id: hoveredStateId}, { hover: false});\n      }\n      hoveredStateId = e.features[0].id;\n      this.map.setFeatureState({source: 'Realtime Bus', id: hoveredStateId}, { hover: true});\n\n    }\n  }\n\n  leave(e){\n    this.map.getCanvas().style.cursor = '';\n    if (hoveredStateId) {\n      this.map.setFeatureState({source: 'Realtime Bus', id: hoveredStateId}, { hover: false});\n    }\n    if (clickedStateId) {\n      this.map.setFeatureState({source: 'Realtime Bus', id: clickedStateId}, { hover: true});\n    }\n    hoveredStateId =  null;\n  }\n\n  async click(e){\n    this.map.getCanvas().style.cursor = 'pointer';\n    if (e.features.length > 0) {\n      if (clickedStateId) {\n        this.map.setFeatureState({source: 'Realtime Bus', id: clickedStateId}, { click: false});\n        this.map.setFeatureState({source: 'Realtime Bus', id: clickedStateId}, { hover: false});\n        this.map.setFeatureState({source: 'Realtime Bus', id: clickedStateId}, { click_radius: false});\n      }\n      clickedStateId = e.features[0].id;\n      this.map.setFeatureState({source: 'Realtime Bus', id: clickedStateId}, { click: true});\n      this.map.setFeatureState({source: 'Realtime Bus', id: clickedStateId}, { click_radius: true});\n\n      let trip_select = parseInt(e.features[0].properties.trip_id)\n\n      let trip_json = 'https://vkyer20d0m.execute-api.us-west-2.amazonaws.com/dev/trips/'+trip_select\n\n      let trip_response = await fetch(trip_json);\n      let trip_data = await trip_response.json();\n      let trip_short_name = trip_data.route_short_name;\n\n      if (trip_short_name) {\n        await this.setStateAsync({selected_bus: trip_short_name});\n\n        let geojson = 'https://data.calgary.ca/resource/hpnd-riq4.geojson?route_short_name='+this.state.selected_bus\n\n        let response = await fetch(geojson);\n        let data = await response.json();\n\n        let turf_center = center(data); //find center of bus route using Turf\n        let center_coord = turf_center.geometry.coordinates;\n\n        this.map.flyTo({\n         center: center_coord,\n         zoom: 12\n        });\n\n        this.map.getSource('Bus Route').setData(geojson);\n        this.map.setLayoutProperty('symbols', 'text-field', String(this.state.selected_bus))\n      }\n    }\n  }\n\n  render(){\n\n    return(\n        <div ref={el => this.mapContainer = el} style={{position: 'absolute',\n          top: 0,\n          bottom: 0,\n          width: '100%',\n          height: '100%'}} />\n    );\n  }\n}\n\nexport default GtfsMap\n"],"sourceRoot":""}